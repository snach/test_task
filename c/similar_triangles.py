"""Выбраны четыре точки с целочисленными координатами:
A(a, 0), B(b, 0), C(0, c) и D(0, d), где 0 < a < b, и 0 < c < d.
Точка P, также с целочисленными координатами, выбирается на прямой AC так, что все три треугольника ABP, CDP и BDP подобны.
Легко показать, что три треугольника могут быть подобны, только если a=c.
Таким образом, при условии a=c, мы ищем тройки чисел (a,b,d), такие, что на AC существует хотя бы одна точка P (с целочисленными координатами), которая делает все три треугольника ABP, CDP и BDP подобными.
Например, если (a,b,d)=(2,3,4), легко можно удостовериться, что точка P(1,1) удовлетворяет вышеупомянутому условию. Заметьте, что тройки (2,3,4) и (2,4,3) считаются различными, хотя точка P(1,1) является общей для обеих.
При b+d < 100, существует 92 различных тройки (a,b,d), обеспечивающих
существование точки P.
При b+d < 100 000, существует 320471 различных тройки (a,b,d), обеспечивающих существование точки P.
Сколько существует различных троек (a,b,d), обеспечивающих существование точки P, при b+d < 100 000 000?
Смотри картинку img_for_task_c.jpg
"""

L = 100_000_000


def gcd(m, n):
    if m < n:
        t = m
        m = n
        n = t
    r = m % n
    if r == 0:
        return n
    else:
        return gcd(n, r)


def incenter_case():
    count = 0
    for n in range(1, int(L / 2)):
        for m in range(1,  n):
            if (m + n) % 2 == 0:
                continue
            if gcd(m, n) != 1:
                continue
            b = n * n - m * m
            d = 2 * n * m
            sum = b + d
            if sum >= L:
                break
            if b == d:
                count += int(L / sum)
            else:
                count += int(2 * int((L / sum)))
    return count


def parallel_case():
    count = 0
    for n in range(1, L, 2):
        for m in range(1, L):
            if gcd(m, n) != 1:
                continue
            g = 2 * n * m
            a = n * n + 2 * m * m
            b = g + a
            if b > L / 2:
                break
            count += int((L - 1) / (2 * b))
    return count


result = incenter_case() + parallel_case()
print(f'result: {result}')

# 549936643 существует различных троек (a,b,d), обеспечивающих существование точки P, при b+d < 100 000 000
